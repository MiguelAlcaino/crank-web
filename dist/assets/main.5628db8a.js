import{d as p,r,o as n,c as o,a as e,u as s,b as t,e as i,w as m,f as h,g as l,z as v,F as g,h as b,i as k,j as f,G as A,k as C,l as w,p as V,A as L,m as R,n as S}from"./graphqlClient.29181555.js";const y=e("nav",{class:"navbar is-black mb-5"},[e("div",{class:"container"},[e("div",{class:"navbar-brand"},[e("div",{class:"navbar-burger burger","data-target":"navMenu"},[e("span"),e("span"),e("span")])])])],-1),N={class:"container"},x={class:"columns"},B={class:"column is-3"},G={class:"menu is-hidden-mobile"},T=e("p",{class:"menu-label"},"General",-1),z={class:"menu-list"},F={key:0},I={key:1},j={class:"column is-9"},q=p({__name:"App",setup(a){return(d,c)=>{const u=r("RouterLink"),_=r("RouterView");return n(),o(g,null,[y,e("div",N,[e("div",x,[e("div",B,[e("aside",G,[T,e("ul",z,[s(t).isLoggedId()?l("",!0):(n(),o("li",F,[i(u,{to:{name:"login"}},{default:m(()=>[h("Login")]),_:1})])),s(t).isLoggedId()?(n(),o("li",I,[e("a",{href:"#",onClick:c[0]||(c[0]=M=>s(t).logout())},"logout")])):l("",!0)])])]),e("div",j,[i(_)])])]),i(s(v))],64)}}});E();async function E(){const a=b({setup(){V("gqlApiService",new L(R,S))},render:()=>w(q)});a.use(k()).use(f).use(A());try{await t.startRefreshTokenTimer()}catch{C().deleteSession()}a.mount("#app")}
